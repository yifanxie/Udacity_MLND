1
00:00:00,470 --> 00:00:03,200
In think in part because clustering tends not to have one

2
00:00:03,200 --> 00:00:05,780
consistent definition it's very algorithm

3
00:00:05,780 --> 00:00:07,370
driven. So there's different algorithms for

4
00:00:07,370 --> 00:00:11,000
doing clustering and we can analyze each of those algorithms somewhat

5
00:00:11,000 --> 00:00:13,950
independently. There isn't really one problem and then there's a bunch

6
00:00:13,950 --> 00:00:17,480
of different algorithms for attacking that one problem. Each algorithm kind

7
00:00:17,480 --> 00:00:20,010
of is its own problem. So, I think the, the easiest

8
00:00:20,010 --> 00:00:22,570
way to go through and talk about unsupervised learning and clustering

9
00:00:22,570 --> 00:00:25,540
is to start going through some algorithms. So I'm going to start with

10
00:00:25,540 --> 00:00:27,390
single linkage clustering, because I think it's

11
00:00:27,390 --> 00:00:29,990
in many ways the simplest and most natural.

12
00:00:29,990 --> 00:00:31,370
>> Okay.

13
00:00:31,370 --> 00:00:33,110
>> And it has some very nice properties. So it's,

14
00:00:33,110 --> 00:00:35,740
it's, it's not a terrible idea, it's been very useful in

15
00:00:35,740 --> 00:00:38,120
statistics in a very long time. So, so here's how

16
00:00:38,120 --> 00:00:40,610
single linkage clustering goes, let's imagine we've got these objects. That

17
00:00:40,610 --> 00:00:42,350
we'll call them these little, these little red dots. We're

18
00:00:42,350 --> 00:00:45,060
imagine that they're objects and just because it would be hard

19
00:00:45,060 --> 00:00:47,530
to write down all the D values between them. Let's

20
00:00:47,530 --> 00:00:51,240
just literally use the 2 dimensional space, the distance on the

21
00:00:51,240 --> 00:00:54,190
slide here as the distances. Okay.

22
00:00:54,190 --> 00:00:54,710
>> Okay.

23
00:00:54,710 --> 00:00:57,750
>> So, you can, so if you were, if you were asked to cluster this

24
00:00:57,750 --> 00:01:00,970
how would you do it? Like, what do you think the, the groupings ought to be?

25
00:01:00,970 --> 00:01:04,319
>> Well, just staring at them they're either two or they're four.

26
00:01:04,319 --> 00:01:05,180
>> Mm.

27
00:01:05,180 --> 00:01:08,110
>> Or maybe, there's five. So, I would

28
00:01:08,110 --> 00:01:09,910
probably put the three on the left that

29
00:01:09,910 --> 00:01:14,510
there together, together. And I would put the

30
00:01:14,510 --> 00:01:16,510
four on the right that are together, together.

31
00:01:18,830 --> 00:01:23,380
Or I might notice that the two at the top of the ones on the right

32
00:01:23,380 --> 00:01:25,870
are more together than the other two and

33
00:01:25,870 --> 00:01:28,000
sub divide them some more. But, if I were

34
00:01:28,000 --> 00:01:30,160
just far enough away, I would definitely say

35
00:01:31,200 --> 00:01:32,780
so that seems like a reasonable clustering, but

36
00:01:32,780 --> 00:01:34,100
also the one that took all four of

37
00:01:34,100 --> 00:01:35,830
those and put them together is a reasonable clustering.

38
00:01:35,830 --> 00:01:37,610
>> Right. Yeah, yeah. That means that sort

39
00:01:37,610 --> 00:01:39,450
of agrees with what my eyes are thinking as

40
00:01:39,450 --> 00:01:41,430
well. Alright, so so it'd be good if we

41
00:01:41,430 --> 00:01:44,630
can recover that kind of structure algorithmically, so let's let's

42
00:01:44,630 --> 00:01:45,970
talk through this, this algorithm. It's

43
00:01:45,970 --> 00:01:48,460
called single linkage clustering, sometimes SLC.

44
00:01:48,460 --> 00:01:53,130
>> Or "slick". nice. It's a, it's

45
00:01:53,130 --> 00:01:58,700
a hierarchical agglomorative cluster of algorithm, or HAC.

46
00:01:58,700 --> 00:02:01,430
>> [LAUGH] I like that acronym even better.

47
00:02:01,430 --> 00:02:03,590
>> That's an Andrew Moore joke, for what it's worth.

48
00:02:03,590 --> 00:02:05,090
>> Oh, it's a slick HAC.

49
00:02:05,090 --> 00:02:07,120
>> Nice. All right. So here's what we're going to

50
00:02:07,120 --> 00:02:09,850
do. We're going to consider each object a cluster to start.

51
00:02:09,850 --> 00:02:11,530
We're going to do this interatively. So we start off

52
00:02:11,530 --> 00:02:13,710
with N objects, like we have here. One, two,

53
00:02:13,710 --> 00:02:16,010
three, four, five, six, seven. And we're going to define

54
00:02:16,010 --> 00:02:20,670
the inter cluster distance as the distance between the closest

55
00:02:20,670 --> 00:02:23,090
two points in the two clusters. So in the

56
00:02:23,090 --> 00:02:26,140
beginning, all the points are in their own clusters.

57
00:02:26,140 --> 00:02:27,890
All the objects are in their own clusters. So

58
00:02:27,890 --> 00:02:31,940
the inter. Cluster distance is exactly the interobject distance. Okay?

59
00:02:31,940 --> 00:02:32,410
>> Okay.

60
00:02:32,410 --> 00:02:35,140
>> But, little by little, we're going to actually

61
00:02:35,140 --> 00:02:38,250
be aggregating things into larger clusters and we have to define what

62
00:02:38,250 --> 00:02:41,020
it means for how, how close is one cluster to another. And

63
00:02:41,020 --> 00:02:44,380
we'll say the close, the closest between two clusters is the closest

64
00:02:44,380 --> 00:02:48,310
of the closest two points between those two clusters. All right. So, so

65
00:02:48,310 --> 00:02:49,900
now what we're going to do is we're going to iterate. We're

66
00:02:49,900 --> 00:02:53,360
going to say merge the two closest clusters, because, you know, they belong

67
00:02:53,360 --> 00:02:56,630
together. And then we're just going to repeat that n minus k

68
00:02:56,630 --> 00:03:00,270
times To leave us with K clusters. So K is now an input

69
00:03:00,270 --> 00:03:00,980
to this algorithm.

70
00:03:00,980 --> 00:03:01,630
>> Okay.

71
00:03:01,630 --> 00:03:03,880
>> All right. So help me out. Let's step through

72
00:03:03,880 --> 00:03:07,040
this. What what would we merge first according to this algorithm?

73
00:03:07,040 --> 00:03:09,480
>> Well, they're either on cluster I, according to

74
00:03:09,480 --> 00:03:13,300
my eyesight, which is, of course, perfect. I would take

75
00:03:13,300 --> 00:03:16,570
the two left most ones, upper left most ones.

76
00:03:16,570 --> 00:03:18,830
Probably and merge them together. They look closest to me.

77
00:03:18,830 --> 00:03:21,940
>> Alright let me label them just to make your life a little bit easier.

78
00:03:21,940 --> 00:03:22,710
>> Oh that'd be nice.

79
00:03:22,710 --> 00:03:24,500
>> Alright. SO what do you think?

80
00:03:24,500 --> 00:03:25,460
>> I would bring

81
00:03:25,460 --> 00:03:26,190
A and B togheter.

82
00:03:26,190 --> 00:03:31,380
>> ALright. They're now a cluster. So we had seven clusters now we

83
00:03:31,380 --> 00:03:34,470
have six. Oh by the way we're trying to get down to two.

84
00:03:34,470 --> 00:03:38,050
>> Okay and then I would put C and D together.

85
00:03:38,050 --> 00:03:39,150
>> Yeah, that's what I was thinking too.

86
00:03:39,150 --> 00:03:41,580
>> Then I would probably want to put c,

87
00:03:41,580 --> 00:03:43,420
d, and e together, because they're in alphabetical order.

88
00:03:43,420 --> 00:03:48,190
>> [LAUGH]. All right, well, just to be concrete about this, why, what is

89
00:03:48,190 --> 00:03:51,250
the next step that we're supposed to do? What we're supposed to do is

90
00:03:51,250 --> 00:03:54,750
say which pair of clusters is closest. And again,

91
00:03:54,750 --> 00:03:57,390
the, the, distance between, say, I don't know, the

92
00:03:57,390 --> 00:04:01,890
a b cluster and the c d cluster is not the average over all the points or the

93
00:04:01,890 --> 00:04:05,070
furthest points but the closest ones. So, like I

94
00:04:05,070 --> 00:04:07,440
think c and d, the,the distance between the a

95
00:04:07,440 --> 00:04:10,070
b cluster and the c d cluster is exactly

96
00:04:10,070 --> 00:04:11,780
the distance between b and d in this case.

97
00:04:11,780 --> 00:04:11,895
>> Mm-hm.

98
00:04:11,895 --> 00:04:12,520
>> Does that make sense?

99
00:04:12,520 --> 00:04:12,800
>> Yeah.

100
00:04:12,800 --> 00:04:16,980
>> Alright. So we know what's the currently closest pair of clusters.

101
00:04:16,980 --> 00:04:19,260
>> from, from where I am looking, it's either e to the c and

102
00:04:19,260 --> 00:04:22,260
d or g to a and b and they look very similar to me.

103
00:04:22,260 --> 00:04:25,830
>> E to C and D or G to B and A, that's what you said?

104
00:04:25,830 --> 00:04:28,100
>> Yeah. Probably G to B and A, staring at.

105
00:04:28,100 --> 00:04:30,250
>> I tried really hard to make it so that they're be

106
00:04:30,250 --> 00:04:33,640
an easy answer, but you're right, I, they're really close. So let's,

107
00:04:33,640 --> 00:04:36,800
let's I think it doesn't matter too much. we'll, we'll say that

108
00:04:36,800 --> 00:04:40,450
that one's neck. So now we'll say, now we'll do a quick quiz.

109
00:04:40,450 --> 00:04:42,200
>> Okay. So what merge

110
00:04:42,200 --> 00:04:45,640
does, single link clustering do next? Just give

111
00:04:45,640 --> 00:04:47,250
the pair of points I would be connecting.

112
00:04:47,250 --> 00:04:48,200
>> Okay.

113
00:04:48,200 --> 00:04:49,310
>> Say, separated by a comma.

