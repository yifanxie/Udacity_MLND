1
00:00:00,570 --> 00:00:02,880
So that's sort of EM at the level of

2
00:00:02,880 --> 00:00:05,290
the equations, but I thought it would be helpful

3
00:00:05,290 --> 00:00:07,400
to actually implement it and kind of mess around

4
00:00:07,400 --> 00:00:09,450
a little bit. So do you want to see what happens?

5
00:00:09,450 --> 00:00:10,570
>> I would love to see what happens.

6
00:00:10,570 --> 00:00:12,520
>> So I generated some data here,

7
00:00:12,520 --> 00:00:14,670
which comes actually from two different Gaussian

8
00:00:14,670 --> 00:00:17,310
clusters. One that's centered over hereish, and

9
00:00:17,310 --> 00:00:19,630
one that's centered over hereish. [LAUGH] Just not

10
00:00:19,630 --> 00:00:22,820
to be too specific about it, but you can sort of see that there's two

11
00:00:22,820 --> 00:00:25,590
clouds of points, right? One in the upper left and one in the lower right.

12
00:00:25,590 --> 00:00:26,210
Can you see it?

13
00:00:26,210 --> 00:00:28,030
>> The one in the lower right looks like

14
00:00:28,030 --> 00:00:29,810
a clown. I think it's a little bit more of

15
00:00:29,810 --> 00:00:31,900
a superhero but that's that's not the point. The point

16
00:00:31,900 --> 00:00:33,470
is, is that it's just a bunch of random points.

17
00:00:33,470 --> 00:00:34,001
>> Hm.

18
00:00:34,001 --> 00:00:35,970
>> That's the point. It's a random point, but it is a point.

19
00:00:35,970 --> 00:00:38,630
>> So, your point is that the points are randomly pointed.

20
00:00:38,630 --> 00:00:40,670
>> Yeah, I just want to point out that at random.

21
00:00:40,670 --> 00:00:41,130
>> I see your point.

22
00:00:41,130 --> 00:00:43,600
>> And, so, what I want to do now is run

23
00:00:43,600 --> 00:00:45,370
EM and the first thing I need to do is pick

24
00:00:45,370 --> 00:00:48,540
the initial centers. Right, so I need to pick the mu's

25
00:00:48,540 --> 00:00:50,770
that we think these were generated by. And so a common

26
00:00:50,770 --> 00:00:52,520
thing for people to do is just to take two of

27
00:00:52,520 --> 00:00:55,270
the points from the data set at random. So I took

28
00:00:55,270 --> 00:00:59,260
two points at random and I'll mark them with an x.

29
00:00:59,260 --> 00:01:01,155
And now what I'm going to do is run an iteration of

30
00:01:01,155 --> 00:01:04,370
EM. And what that means is, I'm going to first do

31
00:01:04,370 --> 00:01:08,090
expectation, which is going to assign every one of these points to

32
00:01:08,090 --> 00:01:10,450
one of these two clusters. And I'll color them as to

33
00:01:10,450 --> 00:01:15,215
which cluster they belong to. And then I will move the centers,

34
00:01:15,215 --> 00:01:18,815
re-estimate the means based on that soft assignment. Makes sense.

35
00:01:18,815 --> 00:01:22,170
>> Alright, now so what you can see is something kind

36
00:01:22,170 --> 00:01:24,970
of interesting happened. Because these centers started off in the same

37
00:01:24,970 --> 00:01:28,760
cluster together, many of them were assigned to one cluster, which

38
00:01:28,760 --> 00:01:30,800
was the one that was a little bit more above. And

39
00:01:30,800 --> 00:01:32,850
then very few of them ended up getting assigned to the

40
00:01:32,850 --> 00:01:35,650
lower cluster because very few points were essentially closer to that

41
00:01:35,650 --> 00:01:37,500
one than the other one. When I colored the lower ones

42
00:01:37,500 --> 00:01:40,450
red and the upper ones blue. And there's this sort of band

43
00:01:40,450 --> 00:01:43,220
of 1s in the middle that had intermediate probabilities,

44
00:01:43,220 --> 00:01:45,620
they weren't really deeply one cluster or the other.

45
00:01:45,620 --> 00:01:46,923
>> They were near 0.5?

46
00:01:46,923 --> 00:01:52,290
>> Yeah, exactly, specifically between, including 0.4 to including 0.6.

47
00:01:52,290 --> 00:01:53,450
>> Okay that make sense.

48
00:01:53,450 --> 00:01:55,070
>> Alright, and so those are the green ones. And

49
00:01:55,070 --> 00:01:58,806
then based on the cluster assignments, we estimated the means. So

50
00:01:58,806 --> 00:02:01,050
this xis now at the, you know, the mean of

51
00:02:01,050 --> 00:02:05,460
the red points. And the green points, because these they're actually

52
00:02:05,460 --> 00:02:07,790
shared and this acts as kind of the rest. And you can

53
00:02:07,790 --> 00:02:12,050
see, it doesn't really capture yet what the true clustering is because a

54
00:02:12,050 --> 00:02:15,910
huge number of the lower right cluster points are blue. They're kind of

55
00:02:15,910 --> 00:02:18,940
grouped in with the upper left cluster. But we can run another iteration

56
00:02:18,940 --> 00:02:21,540
of the app. And now things have shifted, right? So now it

57
00:02:21,540 --> 00:02:25,580
looks like this lower right cluster has claimed a good amount of the

58
00:02:25,580 --> 00:02:28,040
points in the lower right and the blue ones are the blue ones.

59
00:02:28,040 --> 00:02:30,820
There's just a few little green scattered between them at the boundary and

60
00:02:30,820 --> 00:02:33,180
you always expect some of that to happen. Now, the centers have

61
00:02:33,180 --> 00:02:36,200
moved and now they are starting to take on their clusters, but we

62
00:02:36,200 --> 00:02:38,870
just run this a couple more iterations until we see the x is

63
00:02:38,870 --> 00:02:43,120
not really moving any where. Alright, seems to have settled down and you

64
00:02:43,120 --> 00:02:47,540
can see it really did pull out the lower right cluster, the upper

65
00:02:47,540 --> 00:02:51,380
left cluster as a cluster and just a few points at the boundary

66
00:02:51,380 --> 00:02:53,770
where it said well I can sort of believe that that's part of the

67
00:02:53,770 --> 00:02:56,010
red cluster, I can sort of believe it's also part of the blue

68
00:02:56,010 --> 00:02:59,570
cluster, I really can't decide. And you know what? That's

69
00:02:59,570 --> 00:03:01,570
probably right too. I mean they could go either way.

70
00:03:01,570 --> 00:03:03,860
>> Yeah, exactly. I can sort of hallucinate this green

71
00:03:03,860 --> 00:03:06,070
point here as being part of the upper cluster. Just

72
00:03:06,070 --> 00:03:07,860
kind of on the fringe. But, you know, it works

73
00:03:07,860 --> 00:03:09,580
just as well as being part of the lower cluster.

74
00:03:09,580 --> 00:03:12,180
>> Actually Michael I'm kind of curious. Can you, use

75
00:03:12,180 --> 00:03:15,030
your magical computer powers to, you know, click on

76
00:03:15,030 --> 00:03:16,410
one of those green points and see what the

77
00:03:16,410 --> 00:03:21,340
probability is? I could. Yeah, so this, in particular,

78
00:03:21,340 --> 00:03:25,680
it's 55% in the first cluster and 45% in the other cluster.

79
00:03:25,680 --> 00:03:25,750
>> Hm.

80
00:03:25,750 --> 00:03:27,970
>> So, it really is. It's hovering near that boundary.

81
00:03:27,970 --> 00:03:30,030
>> That makes sense. What about that red point all the

82
00:03:30,030 --> 00:03:32,020
way in to the right? The ones that are all by itself.

83
00:03:32,020 --> 00:03:38,322
>> Excellent choice. So, it is actually. 0.9999996

84
00:03:38,322 --> 00:03:42,460
in one cluster. And 1 minus

85
00:03:42,460 --> 00:03:43,820
that in the other cluster. This one

86
00:03:43,820 --> 00:03:45,570
is pretty certain coming from the second cluster.

87
00:03:45,570 --> 00:03:46,370
>> I see two things that

88
00:03:46,370 --> 00:03:50,110
came out of this. One is EM is much nicer in

89
00:03:50,110 --> 00:03:52,960
that it's not forced to make a decision about where those green

90
00:03:52,960 --> 00:03:56,430
points go. So that's sort of soft clustering does that. And

91
00:03:56,430 --> 00:03:58,190
that's a good thing. Because we don't have that problem that we

92
00:03:58,190 --> 00:04:01,010
had before. But one of the consequences of that, and this

93
00:04:01,010 --> 00:04:03,160
is not a bad thing, but it's a thing, is that even

94
00:04:03,160 --> 00:04:06,220
points that pretty clearly belong to one cluster or another, given that

95
00:04:06,220 --> 00:04:11,296
we're staring at them. They do have a really high probability, 0.9999999996,

96
00:04:11,296 --> 00:04:14,980
but they all have some non-zero probability. Of

97
00:04:14,980 --> 00:04:16,640
ending up, of belonging to the other cluster.

98
00:04:16,640 --> 00:04:19,260
>> And is that, you think that's a good thing or a bad thing?

99
00:04:19,260 --> 00:04:20,350
>> I think it's a good thing. I

100
00:04:20,350 --> 00:04:22,920
think it makes sense because Gaussians have infinite

101
00:04:22,920 --> 00:04:26,310
extent and even if a point is very, very far away from the center, it has

102
00:04:26,310 --> 00:04:28,225
some chance of having been generated from that

103
00:04:28,225 --> 00:04:30,940
Gaussian and so, this just tells us what

104
00:04:30,940 --> 00:04:33,860
that chance is, it is very, very unlikely.

105
00:04:33,860 --> 00:04:36,819
But it is still as non-zero probability match.

106
00:04:36,819 --> 00:04:39,320
>> In, in some sense, it's acknowledging truth.

107
00:04:39,320 --> 00:04:41,450
Right? Which is that you can't be sure

108
00:04:41,450 --> 00:04:43,100
which of the two clusters, this came form,

109
00:04:43,100 --> 00:04:44,490
even if I tell you where these clusters are.

110
00:04:44,490 --> 00:04:44,900
>> Right?

111
00:04:44,900 --> 00:04:46,210
>> Yeah, okay. I, I agree that.

112
00:04:46,210 --> 00:04:47,830
>> Okay, this is cool. So, EM is nice. So,

113
00:04:47,830 --> 00:04:50,750
does EM work for anything other than Gaussians? It does, it

114
00:04:50,750 --> 00:04:52,890
actually can be applied in lots of different settings. Let's

115
00:04:52,890 --> 00:04:55,930
flip over and talk a little about some properties of EM.

116
00:04:55,930 --> 00:04:56,590
>> Okay.

